
REFERENCE ASSEMBLY [GitHubAnalytics.USql];
REFERENCE ASSEMBLY [Newtonsoft.Json];


@IssueEvent =
SELECT	 GitHubAnalytics.USql.Utility.GetString(Data, "repo") AS Repo
		,GitHubAnalytics.USql.Utility.GetString(Data, "owner") AS Owner
		,GitHubAnalytics.USql.Utility.GetInteger(Data, "issue_id") AS IssueId
		,GitHubAnalytics.USql.Utility.GetInteger(Data, "id") AS IssueEventId
		,GitHubAnalytics.USql.Utility.GetInteger(Data, "actor.id") AS ActorId
		,GitHubAnalytics.USql.Utility.GetString(Data, "actor.login") AS ActorLogin
		,GitHubAnalytics.USql.Utility.GetBoolean(Data, "actor.site_admin") AS ActorSiteAdmin
		,GitHubAnalytics.USql.Utility.GetString(Data, "actor.type") AS ActorType
		,GitHubAnalytics.USql.Utility.GetInteger(Data, "assignee.id") AS AssigneeId
		,GitHubAnalytics.USql.Utility.GetString(Data, "assignee.login") AS AssigneeLogin
		,GitHubAnalytics.USql.Utility.GetBoolean(Data, "assignee.site_admin") AS AssigneeSiteAdmin
		,GitHubAnalytics.USql.Utility.GetString(Data, "assignee.type") AS AssigneeType
		,GitHubAnalytics.USql.Utility.GetString(Data, "commit_id") AS CommitId
		,GitHubAnalytics.USql.Utility.GetDateTime(Data, "created_at") AS CreatedAt
		,GitHubAnalytics.USql.Utility.GetString(Data, "event") AS EventName
		,GitHubAnalytics.USql.Utility.GetString(Data, "label.color") AS LabelColor
		,GitHubAnalytics.USql.Utility.GetString(Data, "label.name") AS LabelName
		,GitHubAnalytics.USql.Utility.GetString(Data, "milestone.title") AS MilestoneTitle
		,GitHubAnalytics.USql.Utility.GetString(Data, "rename.from") AS RenameFrom
		,GitHubAnalytics.USql.Utility.GetString(Data, "rename.to") AS RenameTo
		,GitHubAnalytics.USql.Utility.GetString(Data, "_id") AS EtlSourceId
        ,DateTime.Parse(IngestDate, null, System.Globalization.DateTimeStyles.AssumeUniversal).ToUniversalTime() AS EtlIngestDate
FROM Staging.GHTorrent.GitHubData AS e
WHERE EventName == "issue_events";

@IssueEventDeDupe =
SELECT   *
        ,ROW_NUMBER() OVER (PARTITION BY IssueEventId ORDER BY EtlSourceId) AS RowNumber
FROM @IssueEvent;

DROP TABLE IF EXISTS dbo.IssueEvent;

CREATE TABLE dbo.IssueEvent
(
    INDEX IX_IssueEvent
    CLUSTERED(Repo, Owner, IssueId, IssueEventId)
    PARTITIONED BY
    HASH(Repo, Owner, IssueId, IssueEventId)
    INTO 20
)
AS
SELECT   Repo
		,Owner
		,IssueId
		,IssueEventId
		,ActorId
		,ActorLogin
		,ActorSiteAdmin
		,ActorType
		,AssigneeId
		,AssigneeLogin
		,AssigneeSiteAdmin
		,AssigneeType
		,CommitId
		,CreatedAt
		,EventName
		,LabelColor
		,LabelName
		,MilestoneTitle
		,RenameFrom
		,RenameTo
		,EtlSourceId
        ,EtlIngestDate
FROM @IssueEventDeDupe
WHERE RowNumber == 1;