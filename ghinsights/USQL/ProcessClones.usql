USE GHInsights;
REFERENCE ASSEMBLY [GHInsights.USql];
REFERENCE ASSEMBLY [Newtonsoft.Json];

@RawClone =
SELECT  Urn
,GHInsights.USql.Utility.GetString(Data, "_metadata.links.repo.href") AS RepoUrn
        ,Data
        ,Urn AS EtlSourceId
        ,GHInsights.USql.Utility.GetInteger(Data, "_metadata.version") AS SchemaVersion
        ,ProcessedAt
        ,DateTime.Parse(IngestDate, null, System.Globalization.DateTimeStyles.AssumeUniversal).ToUniversalTime() AS EtlIngestDate
        FROM Staging.GHCrawler.GitHubData AS e
WHERE EventName == "clones";

    @GitHubClones =
        SELECT Urn,
							RepoUrn,
               JsonPath.Substring(JsonPath.IndexOf("[")+1, JsonPath.IndexOf("]")-JsonPath.IndexOf("[")) AS RowIdx,
               JsonPath.Substring(JsonPath.IndexOf("]")+2, JsonPath.Length - 2 - JsonPath.IndexOf("]")) AS ColumnName,
               Value AS Value,
               SchemaVersion,
							 ProcessedAt,
							 EtlSourceId,
							 EtlIngestDate
        FROM @RawClone CROSS APPLY EXPLODE (Data) AS d(JsonPath string, Value byte[])
        WHERE JsonPath.IndexOf("]") > -1
;

@ClonesPrePivot = SELECT Urn,
										RepoUrn,
										SchemaVersion,
										ProcessedAt,
										EtlSourceId,
										EtlIngestDate,
                    MAP_AGG(ColumnName, Value) AS Data
                    FROM @GitHubClones AS e
                    GROUP BY Urn,
										RepoUrn,
										SchemaVersion,
										ProcessedAt,
										EtlSourceId,
										EtlIngestDate;



@ClonesPivoted = SELECT Urn,
										RepoUrn,
                    GHInsights.USql.Utility.GetDateTime(Data, "timestamp") AS DataDate,
                    GHInsights.USql.Utility.GetInteger(Data, "count") AS Count,
                    GHInsights.USql.Utility.GetInteger(Data, "uniques") AS Uniques,
										SchemaVersion,
										ProcessedAt,
										EtlSourceId,
										EtlIngestDate
                FROM @ClonesPrePivot;
                // UNION ALL
                // SELECT *
                // FROM GHInsights.dbo.GitHubClones;

@ClonesDeDupe = SELECT *, ROW_NUMBER() OVER(PARTITION BY Urn, DataDate ORDER BY EtlIngestDate DESC) AS RowNumber
                FROM @ClonesPivoted;


// TRUNCATE TABLE GHInsights.dbo.GitHubClones;

// INSERT GHInsights.dbo.GitHubClones
//     SELECT Urn
// 					,RepoUrn
// 					,DataDate
// 					,Count
// 					,Uniques
// 					,SchemaVersion
// 					,ProcessedAt
// 					,EtlSourceId
// 					,EtlIngestDate
//             FROM @ClonesDeDupe
//             WHERE RowNumber == 1;

DROP TABLE IF EXISTS dbo.Clones;

CREATE TABLE dbo.Clones
(
    INDEX IX_Clone
    CLUSTERED(Urn)
    DISTRIBUTE
    HASH(Urn)
    INTO 20
)
AS
SELECT  Urn
					,RepoUrn
					,DataDate
					,Count
					,Uniques
					,SchemaVersion
					,ProcessedAt
					,EtlSourceId
					,EtlIngestDate
FROM @ClonesDeDupe
WHERE RowNumber == 1;

