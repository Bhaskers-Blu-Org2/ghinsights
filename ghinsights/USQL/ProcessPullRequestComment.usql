
REFERENCE ASSEMBLY [GHInsights.USql];
REFERENCE ASSEMBLY [Newtonsoft.Json];

@PullRequestComment =
SELECT	 GHInsights.USql.Utility.GetString(Data, "repo") AS Repo
		,GHInsights.USql.Utility.GetString(Data, "owner") AS Owner
		,GHInsights.USql.Utility.GetInteger(Data, "pullreq_id") AS PullRequestId
		,GHInsights.USql.Utility.GetInteger(Data, "id") AS PullRequestCommentId
		,GHInsights.USql.Utility.GetString(Data, "_links.html.href") AS LinksHtmlHref
		,GHInsights.USql.Utility.GetString(Data, "_links.pull_request.href") AS LinksPullRequestHref
		,GHInsights.USql.Utility.GetString(Data, "_links.self.href") AS LinksSelfHref
		,GHInsights.USql.Utility.GetUSqlString(Data, "body") AS Body
		,GHInsights.USql.Utility.GetString(Data, "commit_id") AS CommitId
		,GHInsights.USql.Utility.GetDateTime(Data, "created_at") AS CreatedAt
		,GHInsights.USql.Utility.GetString(Data, "diff_hunk") AS DiffHunk
		,GHInsights.USql.Utility.GetString(Data, "original_commit_id") AS OriginalCommitId
		,GHInsights.USql.Utility.GetInteger(Data, "original_position") AS OriginalPosition
		,GHInsights.USql.Utility.GetString(Data, "path") AS Path
		,GHInsights.USql.Utility.GetInteger(Data, "position") AS Position
		,GHInsights.USql.Utility.GetDateTime(Data, "updated_at") AS UpdatedAt
		,GHInsights.USql.Utility.GetInteger(Data, "user.id") AS UserId
		,GHInsights.USql.Utility.GetString(Data, "user.login") AS UserLogin
		,GHInsights.USql.Utility.GetBoolean(Data, "user.site_admin") AS UserSiteAdmin
		,GHInsights.USql.Utility.GetString(Data, "user.type") AS UserType
		,GHInsights.USql.Utility.GetString(Data, "_id") AS EtlSourceId
        ,DateTime.Parse(IngestDate, null, System.Globalization.DateTimeStyles.AssumeUniversal).ToUniversalTime() AS EtlIngestDate
FROM Staging.GHTorrent.GitHubData AS e
WHERE EventName == "pull_request_comments";

@PullRequestCommentDeDupe =
SELECT   *
        ,ROW_NUMBER() OVER (PARTITION BY PullRequestCommentId, UpdatedAt ORDER BY EtlSourceId DESC) AS RowNumber
FROM @PullRequestComment;

DROP TABLE IF EXISTS dbo.PullRequestComment;

CREATE TABLE dbo.PullRequestComment
(
    INDEX IX_PullRequestComment
    CLUSTERED(Repo, Owner, PullRequestId, PullRequestCommentId)
    PARTITIONED BY
    HASH(PullRequestCommentId, UpdatedAt)
    INTO 20
)
AS
SELECT   Repo
		,Owner
		,PullRequestId
		,PullRequestCommentId
		,LinksHtmlHref
		,LinksPullRequestHref
		,LinksSelfHref
		,Body
		,CommitId
		,CreatedAt
		,DiffHunk
		,OriginalCommitId
		,OriginalPosition
		,Path
		,Position
		,UpdatedAt
		,UserId
		,UserLogin
		,UserSiteAdmin
		,UserType
		,EtlSourceId
        ,EtlIngestDate
FROM @PullRequestCommentDeDupe
WHERE RowNumber == 1;
