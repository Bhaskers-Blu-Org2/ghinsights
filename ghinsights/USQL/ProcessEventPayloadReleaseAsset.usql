USE GHInsightsDev;
REFERENCE ASSEMBLY [GHInsights.USql];
REFERENCE ASSEMBLY [Newtonsoft.Json];

@RawEventPayloadReleaseAsset =
SELECT  Urn AS EventUrn
        ,ProcessedAt
        ,Data
        ,GHInsights.USql.Utility.GetInteger(Data, "_metadata.version") AS SchemaVersion
        ,Urn AS EtlSourceId
        ,DateTime.Parse(IngestDate, null, System.Globalization.DateTimeStyles.AssumeUniversal).ToUniversalTime() AS EtlIngestDate
        FROM Staging.GHCrawler.GitHubData AS e
WHERE EventName == "ReleaseEvent";

@EventPayloadReleaseAssetDeDupe =
SELECT   *
        ,ROW_NUMBER() OVER (PARTITION BY EventUrn ORDER BY ProcessedAt DESC) AS RowNumber
FROM @RawEventPayloadReleaseAsset;

@EventPayloadReleaseAssetExplode =
SELECT	 EtlIngestDate
        ,EventUrn
        ,ProcessedAt
        ,Int32.Parse(JsonPath.Substring(JsonPath.IndexOf("[")+1,JsonPath.IndexOf("]") -  JsonPath.IndexOf("[")-1)) AS EventPayloadReleaseAssetId
        ,JsonPath.Substring(JsonPath.IndexOf("]")+2, JsonPath.Length - 2 - JsonPath.IndexOf("]")) AS ColumnName
        ,Value AS Value
        ,SchemaVersion
        ,EtlSourceId
FROM @EventPayloadReleaseAssetDeDupe AS e
CROSS APPLY EXPLODE(Data) AS d(JsonPath string, Value byte[])
WHERE JsonPath.StartsWith("payload.release.assets[")
AND RowNumber == 1;

@EventPayloadReleaseAssetPrePivot =
SELECT	 EtlIngestDate
        ,EventUrn
        ,ProcessedAt
        ,EventPayloadReleaseAssetId
        ,MAP_AGG(ColumnName, Value) AS Data
        ,SchemaVersion
        ,EtlSourceId
FROM @EventPayloadReleaseAssetExplode AS e
GROUP BY EtlIngestDate, EventUrn, ProcessedAt, EventPayloadReleaseAssetId, EtlSourceId, SchemaVersion;

@EventPayloadReleaseAsset =
SELECT   EventUrn
        ,ProcessedAt
        ,GHInsights.USql.Utility.GetInteger(Data, "id") AS EventPayloadReleaseAssetId
		,GHInsights.USql.Utility.GetString(Data, "content_type") AS ContentType
		,GHInsights.USql.Utility.GetDateTime(Data, "created_at") AS CreatedAt
		,GHInsights.USql.Utility.GetInteger(Data, "download_count") AS DownloadCount
		,GHInsights.USql.Utility.GetString(Data, "name") AS Name
		,GHInsights.USql.Utility.GetInteger(Data, "size") AS Size
		,GHInsights.USql.Utility.GetString(Data, "state") AS State
		,GHInsights.USql.Utility.GetDateTime(Data, "updated_at") AS UpdatedAt
		,GHInsights.USql.Utility.GetInteger(Data, "uploader.id") AS UploaderId
		,GHInsights.USql.Utility.GetString(Data, "uploader.login") AS UploaderLogin
		,GHInsights.USql.Utility.GetBoolean(Data, "uploader.site_admin") AS UploaderSiteAdmin
		,GHInsights.USql.Utility.GetString(Data, "uploader.type") AS UploaderType
        ,SchemaVersion
        ,EtlSourceId
        ,EtlIngestDate
FROM @EventPayloadReleaseAssetPrePivot AS e;

DROP TABLE IF EXISTS dbo.EventPayloadReleaseAsset;

CREATE TABLE dbo.EventPayloadReleaseAsset
(
    INDEX IX_EventPayloadReleaseAsset
    CLUSTERED(EventUrn, EventPayloadReleaseAssetId)
    DISTRIBUTE
    HASH(EventUrn, EventPayloadReleaseAssetId, UpdatedAt)
    INTO 20
)
AS
SELECT   EventUrn
        ,EventPayloadReleaseAssetId
		,ContentType
		,CreatedAt
		,DownloadCount
		,Name
		,Size
		,State
		,UpdatedAt
		,UploaderId
		,UploaderLogin
		,UploaderSiteAdmin
		,UploaderType
                ,SchemaVersion
        ,ProcessedAt
        ,EtlSourceId
        ,EtlIngestDate
FROM @EventPayloadReleaseAsset;

