USE GHInsightsDev;

REFERENCE ASSEMBLY [GHInsights.USql];
REFERENCE ASSEMBLY [Newtonsoft.Json];

@IssueComment =
SELECT Urn
		,GHInsights.USql.Utility.GetString(Data, "_metadata.links.siblings.href") AS SiblingsUrn
		,GHInsights.USql.Utility.GetInteger(Data, "id") AS IssueCommentId
		,GHInsights.USql.Utility.GetUSqlString(Data, "body") AS Body
		,GHInsights.USql.Utility.GetDateTime(Data, "created_at") AS CreatedAt
		,GHInsights.USql.Utility.GetDateTime(Data, "updated_at") AS UpdatedAt
		,GHInsights.USql.Utility.GetInteger(Data, "user.id") AS UserId
		,GHInsights.USql.Utility.GetString(Data, "user.login") AS UserLogin
		,GHInsights.USql.Utility.GetBoolean(Data, "user.site_admin") AS UserSiteAdmin
		,GHInsights.USql.Utility.GetString(Data, "user.type") AS UserType
		,ProcessedAt
		,Urn AS EtlSourceId
    ,DateTime.Parse(IngestDate, null, System.Globalization.DateTimeStyles.AssumeUniversal).ToUniversalTime() AS EtlIngestDate
FROM Staging.GHCrawler.GitHubData AS e
WHERE EventName == "issue_comment";

@IssueCommentDeDupe =
SELECT   *
        ,ROW_NUMBER() OVER (PARTITION BY EtlSourceId ORDER BY ProcessedAt DESC) AS RowNumber
FROM @IssueComment;

DROP TABLE IF EXISTS dbo.IssueComment;

CREATE TABLE dbo.IssueComment
(
    INDEX IX_IssueComment
    CLUSTERED(Urn)
    DISTRIBUTE HASH(IssueCommentId, UpdatedAt)
    INTO 20
)
AS
SELECT  Urn
		,SiblingsUrn
		,IssueCommentId
		,Body
		,CreatedAt
		,UpdatedAt
		,UserId
		,UserLogin
		,UserSiteAdmin
		,UserType
		,ProcessedAt
		,EtlSourceId
    ,EtlIngestDate
FROM @IssueCommentDeDupe
WHERE RowNumber == 1;