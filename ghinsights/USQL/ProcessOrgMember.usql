USE GHInsightsDev;
REFERENCE ASSEMBLY [GHInsights.USql];
REFERENCE ASSEMBLY [Newtonsoft.Json];

//get all
@Raw =
SELECT  GHInsights.USql.Utility.GetString(Data, "_metadata.links.origin.href") AS OriginUrn
        ,GHInsights.USql.Utility.GetString(Data, "_metadata.links.unique.href") AS UniqueUrn
        ,Data
        ,Urn AS EtlSourceId
        ,GHInsights.USql.Utility.GetDateTime(Data, "_metadata.fetchedAt") AS FetchedAt
        ,ProcessedAt
        ,DateTime.Parse(IngestDate, null, System.Globalization.DateTimeStyles.AssumeUniversal).ToUniversalTime() AS EtlIngestDate
        FROM Staging.GHCrawler.GitHubData AS e
WHERE EventName == "members";

//find most recent unique for origin

@UniqueNumbered =
SELECT   UniqueUrn
        ,ROW_NUMBER() OVER (PARTITION BY OriginUrn ORDER BY ProcessedAt DESC) AS RowNumber
FROM @Raw;

@UniqueMostRecent = SELECT DISTINCT UniqueUrn FROM @UniqueNumbered WHERE RowNumber == 1;

@CollectionExplode =
SELECT	 EtlIngestDate
        ,OriginUrn
        ,JsonPath
        ,GHInsights.USql.Utility.GetUSqlString(Value) AS CollectionUrn
        ,EtlSourceId
        ,ProcessedAt
        ,FetchedAt
FROM @UniqueMostRecent AS u INNER JOIN @Raw AS e ON u.UniqueUrn == e.UniqueUrn
CROSS APPLY EXPLODE(Data) AS d(JsonPath string, Value byte[])
WHERE JsonPath.StartsWith("_metadata.links.resources.hrefs[");


DROP TABLE IF EXISTS dbo.OrgMembers;

CREATE TABLE dbo.OrgMembers
(
    INDEX IX_OrgMembers
    CLUSTERED(OrgUrn, UserUrn)
    DISTRIBUTE
    HASH(OrgUrn, UserUrn)
    INTO 20
)
AS
SELECT  OriginUrn AS OrgUrn,
        CollectionUrn AS UserUrn
FROM @CollectionExplode;
