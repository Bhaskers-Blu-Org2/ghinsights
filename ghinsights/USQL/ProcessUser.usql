
REFERENCE ASSEMBLY [GHInsights.USql];
REFERENCE ASSEMBLY [Newtonsoft.Json];

@User =
SELECT	 GHInsights.USql.Utility.GetString(Data, "login") AS Login
		,GHInsights.USql.Utility.GetInteger(Data, "id") AS UserId
		,"" AS Bio
        ,"" AS Blog
		,GHInsights.USql.Utility.GetPiiString(Data, "company") AS Company
		,GHInsights.USql.Utility.GetDateTime(Data, "created_at") AS CreatedAt
        ,GHInsights.USql.Utility.GetPiiString(Data, "email") AS Email
		,GHInsights.USql.Utility.GetInteger(Data, "followers") AS Followers
		,GHInsights.USql.Utility.GetInteger(Data, "following") AS Following
		,GHInsights.USql.Utility.GetBoolean(Data, "hireable") AS Hireable
		,GHInsights.USql.Utility.GetString(Data, "location") AS Location
        ,"" AS Name
		,GHInsights.USql.Utility.GetInteger(Data, "public_gists") AS PublicGists
		,GHInsights.USql.Utility.GetInteger(Data, "public_repos") AS PublicRepos
		,GHInsights.USql.Utility.GetBoolean(Data, "site_admin") AS SiteAdmin
		,GHInsights.USql.Utility.GetString(Data, "type") AS Type
		,GHInsights.USql.Utility.GetDateTime(Data, "updated_at") AS UpdatedAt
		,GHInsights.USql.Utility.GetString(Data, "_id") AS EtlSourceId
        ,DateTime.Parse(IngestDate, null, System.Globalization.DateTimeStyles.AssumeUniversal).ToUniversalTime() AS EtlIngestDate
FROM Staging.GHTorrent.GitHubData AS e
WHERE EventName == "users";

@UserDeDupe =
SELECT   *
        ,ROW_NUMBER() OVER (PARTITION BY UserId, UpdatedAt ORDER BY EtlSourceId DESC) AS RowNumber
FROM @User;

DROP TABLE IF EXISTS dbo.User;

CREATE TABLE dbo.User
(
    INDEX IX_User
    CLUSTERED(Login)
    PARTITIONED BY
    HASH(UserId, UpdatedAt)
)
AS
SELECT   Login
		,UserId
		,Bio
		,Blog
		,Company
		,CreatedAt
		,Email
		,Followers
		,Following
		,Hireable
		,Location
		,Name
		,PublicGists
		,PublicRepos
		,SiteAdmin
		,Type
		,UpdatedAt
		,EtlSourceId
        ,EtlIngestDate
FROM @UserDeDupe
WHERE RowNumber == 1;

