
REFERENCE ASSEMBLY [GHInsights.USql];
REFERENCE ASSEMBLY [Newtonsoft.Json];

@Watcher =
SELECT	 GHInsights.USql.Utility.GetString(Data, "repo") AS Repo
		,GHInsights.USql.Utility.GetString(Data, "owner") AS Owner
		,GHInsights.USql.Utility.GetString(Data, "login") AS Login
		,GHInsights.USql.Utility.GetInteger(Data, "id") AS WatcherId
		,GHInsights.USql.Utility.GetString(Data, "bio") AS Bio
		,GHInsights.USql.Utility.GetPiiString(Data, "blog") AS Blog
		,GHInsights.USql.Utility.GetPiiString(Data, "company") AS Company
		,GHInsights.USql.Utility.GetDateTime(Data, "created_at") AS CreatedAt
		,GHInsights.USql.Utility.GetPiiString(Data, "email") AS Email
		,GHInsights.USql.Utility.GetInteger(Data, "followers") AS Followers
		,GHInsights.USql.Utility.GetInteger(Data, "following") AS Following
		,GHInsights.USql.Utility.GetBoolean(Data, "hireable") AS Hireable
		,GHInsights.USql.Utility.GetPiiString(Data, "location") AS Location
		,GHInsights.USql.Utility.GetPiiString(Data, "name") AS Name
		,GHInsights.USql.Utility.GetInteger(Data, "public_gists") AS PublicGists
		,GHInsights.USql.Utility.GetInteger(Data, "public_repos") AS PublicRepos
		,GHInsights.USql.Utility.GetBoolean(Data, "site_admin") AS SiteAdmin
		,GHInsights.USql.Utility.GetString(Data, "type") AS Type
		,GHInsights.USql.Utility.GetDateTime(Data, "updated_at") AS UpdatedAt
		,GHInsights.USql.Utility.GetString(Data, "_id") AS EtlSourceId
        ,DateTime.Parse(IngestDate, null, System.Globalization.DateTimeStyles.AssumeUniversal).ToUniversalTime() AS EtlIngestDate
FROM Staging.GHTorrent.GitHubData AS e
WHERE EventName == "watchers";

@WatcherDeDupe =
SELECT   *
        ,ROW_NUMBER() OVER (PARTITION BY WatcherId, UpdatedAt ORDER BY EtlSourceId DESC) AS RowNumber
FROM @Watcher;

DROP TABLE IF EXISTS dbo.Watcher;

CREATE TABLE dbo.Watcher
(
    INDEX IX_Watcher
    CLUSTERED(Repo, Owner, Login)
    PARTITIONED BY
    HASH(Repo, Owner, Login)
    INTO 20
)
AS
SELECT *
FROM @WatcherDeDupe
WHERE RowNumber == 1;



